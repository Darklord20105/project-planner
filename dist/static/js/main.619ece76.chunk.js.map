{"version":3,"sources":["config/fbConfig.js","components/layout/signedInLinks.js","redux/actions/authActions.js","components/layout/signedOutLinks.js","components/layout/Navigation.js","components/project/ProjectSummary.js","components/project/ProjectList.js","components/dashboard/Notification.js","components/dashboard/dashBoard.js","components/auth/SignIn.js","components/auth/SignUp.js","components/layout/Footer.js","redux/actions/projectActions.js","components/project/CreateProject.js","components/project/ProjectDetails.js","App.js","serviceWorker.js","redux/reducers/authReducer.js","redux/reducers/projectReducer.js","redux/reducers/rootReducer.js","redux/configureStore.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","connect","dispatch","signOut","getState","auth","then","type","props","console","log","Nav","NavItem","className","to","Button","variant","onClick","profile","initials","SignedOutLinks","state","links","uid","Navbar","collapseOnSelect","fluid","expand","bg","id","Container","Brand","style","color","textDecoration","Toggle","aria-controls","Collapse","ProjectSummary","project","Card","Body","Title","title","Footer","authorFirstName","authorLastName","moment","timestamp","toDate","calendar","ProjectList","projects","map","key","Notification","notifications","item","Text","class","user","content","time","fromNow","DashBoard","this","Row","Col","xs","md","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","Form","onSubmit","Group","controlId","Label","Control","placeholder","onChange","textAlign","padding","cred","creds","signInWithEmailAndPassword","catch","err","SignUp","signUp","newUser","getFirestore","createUserWithEmailAndPassword","res","doc","set","firstName","lastName","createProject","authorId","add","Date","CreateProject","history","push","as","rows","ownProps","match","params","data","width","App","Navigation","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initialState","authReducer","action","message","initState","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","store","createStore","applyMiddleware","thunk","withExtraArgument","getFirebase","reduxFirestore","fbConfig","rrfProps","config","useFirestoreForProfile","userProfile","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.619ece76.chunk.js","sourcesContent":["// Firebase App (the core Firebase SDK) is always required and must be listed first\r\nimport * as firebase from \"firebase/app\";\r\n\r\n// If you enabled Analytics in your project, add the Firebase SDK for Analytics\r\nimport \"firebase/analytics\";\r\n\r\n// Add the Firebase products that you want to use\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyCtmbcuYe_S_G9wS_eSGhOmnB5KLqbX7m8\",\r\n  authDomain: \"project-planner-820d6.firebaseapp.com\",\r\n  databaseURL: \"https://project-planner-820d6.firebaseio.com\",\r\n  projectId: \"project-planner-820d6\",\r\n  storageBucket: \"\",\r\n  messagingSenderId: \"928621777111\",\r\n  appId: \"1:928621777111:web:16fc236d152f0a69c2a092\",\r\n  measurementId: \"G-D6YMZZH5T2\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import React from \"react\";\r\nimport { Nav, NavItem, Button } from \"react-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../../redux/actions/authActions\";\r\n\r\nconst SignedInLinks = props => {\r\n  console.log(props);\r\n  return (\r\n    <Nav>\r\n      <NavItem>\r\n        <NavLink className=\"nav-link\" to=\"/createNew\">\r\n          Create Project\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <Button variant=\"dark\" className=\"nav-link\" onClick={props.signOut}>\r\n          Log Out\r\n        </Button>\r\n      </NavItem>\r\n      <NavItem className=\"rounded-circle\">\r\n        <NavLink className=\"nav-link \" to=\"/\">\r\n          {props.profile.initials}\r\n        </NavLink>\r\n      </NavItem>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(SignedInLinks);\r\n","import firebase from \"../../config/fbConfig\";\r\n\r\nexport const signIn = creds => {\r\n  return (dispatch, getState) => {\r\n    return firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(creds.email, creds.password)\r\n      .then(() => {\r\n        dispatch({ type: \"LOGIN_SUCCESS\" });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"LOGIN_FAILED\", err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState) => {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: \"LOGOUT_SUCCESS\" });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signUp = newUser => {\r\n  return (dispatch, getState, { getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then(res => {\r\n        return firestore\r\n          .collection(\"users\")\r\n          .doc(res.user.uid)\r\n          .set({\r\n            firstName: newUser.firstName,\r\n            lastName: newUser.lastName,\r\n            initials: newUser.firstName[0] + newUser.lastName[0]\r\n          });\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"SIGNUP_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { Nav, NavItem } from \"react-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <Nav>\r\n      <NavItem>\r\n        <NavLink className=\"nav-link\" to=\"/login\">\r\n          Log In\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink className=\"nav-link\" to=\"/signup\">\r\n          Sign Up\r\n        </NavLink>\r\n      </NavItem>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default SignedOutLinks;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Navbar, Container, Nav } from \"react-bootstrap\";\r\nimport SignedInLinks from \"./signedInLinks\";\r\nimport SignedOutLinks from \"./signedOutLinks\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst NavigationBar = props => {\r\n  console.log(props);\r\n  const { auth, profile } = props;\r\n  const links = auth.uid ? (\r\n    <SignedInLinks profile={profile} />\r\n  ) : (\r\n    <SignedOutLinks />\r\n  );\r\n  return (\r\n    <Navbar\r\n      collapseOnSelect\r\n      fluid\r\n      expand=\"lg\"\r\n      bg=\"dark\"\r\n      variant=\"dark\"\r\n      id=\"mainNav\"\r\n    >\r\n      <Container>\r\n        <Navbar.Brand>\r\n          <NavLink to=\"/\" style={{ color: \"#f4f4f4\", textDecoration: \"none\" }}>\r\n            Project Planner\r\n          </NavLink>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"ml-auto\">{links}</Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(state);\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(NavigationBar);\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\nconst ProjectSummary = ({ project }) => {\r\n  return (\r\n    <Card bg=\"light\">\r\n      {/* <Card.Header></Card.Header> */}\r\n      <Card.Body>\r\n        <Card.Title>{project.title}</Card.Title>\r\n        {/* <Button variant=\"primary\">Go somewhere</Button> */}\r\n      </Card.Body>\r\n      <Card.Footer>\r\n        <p>\r\n          Posted by {project.authorFirstName} {project.authorLastName}\r\n        </p>\r\n        <small className=\"text-muted\">\r\n          Last updated {moment(project.timestamp.toDate()).calendar()}\r\n        </small>\r\n      </Card.Footer>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProjectSummary;\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport ProjectSummary from \"./ProjectSummary\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  return (\r\n    <Container>\r\n      {projects ? (\r\n        projects &&\r\n        projects.map(project => {\r\n          return (\r\n            <div key={project.id}>\r\n              <Link to={\"/project/\" + project.id}>\r\n                <ProjectSummary project={project} />\r\n              </Link>\r\n              <br />\r\n            </div>\r\n          );\r\n        })\r\n      ) : (\r\n        <p>Loading please Wait....</p>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst Notification = props => {\r\n  const { notifications } = props;\r\n  return (\r\n    <Card>\r\n      <Card.Body>\r\n        <Card.Title>Notification</Card.Title>\r\n        <ul className=\"list-group list-group-flush\">\r\n          {notifications &&\r\n            notifications.map(item => {\r\n              return (\r\n                <li className=\"list-group-item\" key={item.id}>\r\n                  <Card.Text>\r\n                    <span class=\"text-success pr-2\">{item.user}</span>\r\n                    <span>{item.content}</span>\r\n                    <br />\r\n                    <small className=\"text-muted\">\r\n                      {moment(item.time.toDate()).fromNow()}\r\n                    </small>\r\n                  </Card.Text>\r\n                </li>\r\n              );\r\n            })}\r\n        </ul>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport ProjectList from \"../project/ProjectList\";\r\nimport Notification from \"./Notification\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass DashBoard extends Component {\r\n  render() {\r\n    const { projects, auth, notifications } = this.props;\r\n    if (!auth.uid) {\r\n      return <Redirect to=\"/login\" />;\r\n    } else {\r\n      return (\r\n        <Container>\r\n          <Row className=\"justify-content-between\">\r\n            <Col xs={12} md={6}>\r\n              <ProjectList projects={projects} />\r\n            </Col>\r\n            <Col xs={6} md={5}>\r\n              <Notification notifications={notifications} />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: \"projects\", orderBy: [\"timestamp\", \"desc\"] },\r\n    { collection: \"notifications\", limit: 3, orderBy: [\"time\", \"desc\"] }\r\n  ])\r\n)(DashBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Form, Button, Container } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn } from \"../../redux/actions/authActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\"\r\n  };\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    console.log(this.state);\r\n    // state declaration is embeded in the form component\r\n    this.props.signIn(this.state);\r\n  };\r\n  render() {\r\n    // console.log(this.props);\r\n    const { authError, auth } = this.props;\r\n    if (auth.uid) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <Container>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              onChange={this.handleChange}\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              We'll never share your email with anyone else.\r\n            </Form.Text>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Sign In\r\n          </Button>\r\n        </Form>\r\n        {authError ? (\r\n          <p style={{ textAlign: \"center\", color: \"red\", padding: \"1rem\" }}>\r\n            {authError}\r\n          </p>\r\n        ) : (\r\n          <p style={{ textAlign: \"center\", color: \"green\", padding: \"1rem\" }}>\r\n            Login Success\r\n          </p>\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  console.log(state);\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signIn: cred => dispatch(signIn(cred))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignIn);\r\n","import React, { Component } from \"react\";\r\nimport { Form, Button, Container } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signUp } from \"../../redux/actions/authActions\";\r\n\r\nclass SignUp extends Component {\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    // state declaration is embeded in the form component\r\n    this.props.signUp(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    if (auth.uid) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <Container>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"firstName\">\r\n            <Form.Label>First Name</Form.Label>\r\n            <Form.Control\r\n              type=\"firstName\"\r\n              placeholder=\"Enter your First Name here\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"lastName\">\r\n            <Form.Label>Last Name</Form.Label>\r\n            <Form.Control\r\n              type=\"lastName\"\r\n              placeholder=\"Enter your Last Name here\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Sign Up\r\n          </Button>\r\n          {authError ? <p>{authError}</p> : null}\r\n        </Form>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signUp: newUser => dispatch(signUp(newUser))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignUp);\r\n","import React, { Component } from \"react\";\r\nimport { Navbar, Container } from \"react-bootstrap\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Container>\r\n          <Navbar.Text>All Rights Reserved @copyright 2019</Navbar.Text>\r\n        </Container>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\nexport default Footer;\r\n","export const createProject = project => {\r\n  return (dispatch, getState, { getFirestore }) => {\r\n    // async calls here\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    firestore\r\n      .collection(\"projects\")\r\n      .add({\r\n        ...project,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorId: authorId,\r\n        timestamp: new Date()\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"CREATE_PROJECT\", project });\r\n      })\r\n      .catch(err => {\r\n        dispatch({ type: \"CREATE_PROJECT_ERROR\", err });\r\n      });\r\n    // end call\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Form, Button, Container } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../redux/actions/projectActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: \"\",\r\n    content: \"\"\r\n  };\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.createProject(this.state);\r\n    // state declaration is embeded in the form component\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    const { auth } = this.props;\r\n    if (!auth.uid) {\r\n      return <Redirect to=\"login\" />;\r\n    }\r\n    return (\r\n      <Container>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Group controlId=\"title\">\r\n            <Form.Label>Project title</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter project title\"\r\n              onChange={this.handleChange}\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              We'll never share your email with anyone else.\r\n            </Form.Text>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"content\">\r\n            <Form.Label>Content</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows=\"3\"\r\n              placeholder=\"Enter project details here\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Create\r\n          </Button>\r\n        </Form>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    createProject: project => {\r\n      dispatch(createProject(project));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CreateProject);\r\n","import React from \"react\";\r\nimport { Card, Container } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectDetails = props => {\r\n  console.log(props);\r\n  const { project, auth } = props;\r\n  if (!auth.uid) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  if (project) {\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <Card bg=\"light\" style={{ width: \"80%\" }}>\r\n            <Card.Body>\r\n              <Card.Title>{project.title}</Card.Title>\r\n              <Card.Text>{project.content}</Card.Text>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <small className=\"text-muted\">\r\n                Last updated\r\n                {moment(project.timestamp.toDate()).calendar()}\r\n              </small>\r\n            </Card.Footer>\r\n          </Card>\r\n        </Container>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <Container>\r\n        <p>loading project please wait</p>\r\n      </Container>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  console.log(state);\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: \"projects\" }])\r\n)(ProjectDetails);\r\n","import React from \"react\";\nimport NavigationBar from \"./components/layout/Navigation\";\nimport DashBoard from \"./components/dashboard/dashBoard\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport Footer from \"./components/layout/Footer\";\nimport CreateProject from \"./components/project/CreateProject\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport ProjectDetails from \"./components/project/ProjectDetails\";\n\nconst App = () => {\n  return (\n    <Router>\n      <div>\n        <NavigationBar />\n        <br />\n        <Switch>\n          <Route exact path=\"/\" component={DashBoard} />\n          <Route path=\"/login\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/createNew\" component={CreateProject} />\n          <Route path=\"/project/:id\" component={ProjectDetails} />\n        </Switch>\n        <br />\n        <Footer />\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n  authError: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_FAILED\":\r\n      console.log(\"failed\");\r\n      return {\r\n        ...state,\r\n        authError: \"login failed\"\r\n      };\r\n    case \"LOGIN_SUCCESS\":\r\n      console.log(\"success\");\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case \"LOGOUT_SUCCESS\":\r\n      console.log(\"logout success\");\r\n      return state;\r\n    case \"SIGNUP_SUCCESS\":\r\n      console.log(\"signup success \");\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case \"SIGNUP_ERROR\":\r\n      console.log(\"signup error\");\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default authReducer;\r\n","const initState = {\r\n  projects: [\r\n    // { id: 1, title: \"title 1\", content: \"the first note content\" },\r\n    // { id: 2, title: \"title 2\", content: \"the second note content\" },\r\n    // { id: 3, title: \"title 3\", content: \"the third note content\" }\r\n  ]\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_PROJECT\":\r\n      console.log(\"create project\", action.project);\r\n      return state;\r\n    case \"CREATE_PROJECT_ERROR\":\r\n      console.log(\"create project error\", action.err);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default projectReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer\r\n});\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\nimport { getFirebase } from \"react-redux-firebase\";\r\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\r\nimport thunk from \"redux-thunk\";\r\nimport fbConfig from \"../config/fbConfig\";\r\n\r\nconst initialState = {};\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\r\n    reduxFirestore(fbConfig)\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/configureStore\";\nimport { ReactReduxFirebaseProvider } from \"react-redux-firebase\";\nimport firebase from \"./config/fbConfig\";\nimport { createFirestoreInstance } from \"redux-firestore\";\n\nconst rrfConfig = {\n  useFirestoreForProfile: true,\n  userProfile: \"users\"\n};\n// other options (parameters) in react-redux-firebase are placed here instead of passing it in the store directly\nexport const rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <App />\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}